import os
import logging
import random
import asyncio
from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes, MessageHandler, filters

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "8210437899:AAHjY8StVawee4XJ-jeBebdzI_vHy4WZEsU"

# –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
USER_STATES = {}


# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    USER_STATES[user.id] = {"step": 1, "screenshots_count": 0, "completed_tasks": []}

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    welcome_text = f"üéâ –ü—Ä–∏–≤–µ—Ç, {user.mention_html()}!\n\n–í —ç—Ç–æ–º –±–æ—Ç–µ —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∏—Ç—å —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π NFT –ø–æ–¥–∞—Ä–æ–∫ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ! üéÅ"

    # –ö–Ω–æ–ø–∫–∞ "–ü–û–õ–£–ß–ò–¢–¨ –ü–û–î–ê–†–û–ö"
    keyboard = [
        [InlineKeyboardButton("üéÅ –ü–û–õ–£–ß–ò–¢–¨ –ü–û–î–ê–†–û–ö", callback_data="get_gift")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        welcome_text,
        reply_markup=reply_markup,
        parse_mode="HTML"
    )


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user = update.effective_user
    await query.answer()

    if user.id not in USER_STATES:
        USER_STATES[user.id] = {"step": 1, "screenshots_count": 0, "completed_tasks": []}

    if query.data == "get_gift":
        # –≠—Ç–∞–ø 1: –í—ã–±–∏—Ä–∞–µ–º –ø–æ–¥–∞—Ä–æ–∫...
        await query.edit_message_text("üéÅ –í—ã–±–∏—Ä–∞–µ–º –ø–æ–¥–∞—Ä–æ–∫...")
        await asyncio.sleep(2)

        # –≠—Ç–∞–ø 2: –ï—â—ë —á—É—Ç—å-—á—É—Ç—å...
        await query.edit_message_text("‚è≥ –ï—â—ë —á—É—Ç—å-—á—É—Ç—å...")
        await asyncio.sleep(2)

        # –≠—Ç–∞–ø 3: –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ...
        await query.edit_message_text("‚ú® –ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ...")
        await asyncio.sleep(2)

        # –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ —Å –ø–æ–¥–∞—Ä–∫–æ–º
        gift_text  = "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞–º –≤—ã–ø–∞–ª —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–π NFT - http://t.me/nft/TopHat-19884 !\n\n"
        gift_text += "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å NFT, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∏–∂–µ üëá\n\n"
        gift_text += "–ù–∞—à–∏ –æ—Ç–∑—ã–≤—ã\nhttps://t.me/Rosa13823"

        keyboard = [
            [InlineKeyboardButton("üìã –ü–û–ö–ê–ó–ê–¢–¨ –ó–ê–î–ê–ù–ò–Ø", callback_data="show_tasks")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.edit_message_text(
            gift_text,
            reply_markup=reply_markup
        )

    elif query.data == "show_tasks":
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–¥–∞–Ω–∏—è
        task_text = "üéØ –ó–ê–î–ê–ù–ò–Ø –î–õ–Ø –ü–û–õ–£–ß–ï–ù–ò–Ø NFT\n\n"

        task_text += "üîπ –ó–ê–î–ê–ù–ò–ï 1/3:\n"
        task_text += "üì± –ù–∞–ø–∏—à–∏—Ç–µ 30 –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –≤ TikTok/Likee —Å —Ç–µ–∫—Å—Ç–æ–º:\n"
        task_text += "'–ø—Ä–∏–∫–∏–Ω—å—Ç–µ –º–Ω–µ –≤ –±–æ—Ç–µ @Rosa155_bot –¥–∞–ª–∏ 3000 –∑–≤–µ–∑–¥'\n\n"
        task_text += "‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:\n"
        task_text += "‚Ä¢ –õ–∞–π–∫–∞–π—Ç–µ —Å–≤–æ–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏\n"
        task_text += "‚Ä¢ –ö–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –≤–∏–¥–µ–æ\n"
        task_text += "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–∏–Ω–∏–º—É–º 30 —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤\n\n"
        task_text += "üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è"

        keyboard = [
            [InlineKeyboardButton("üì∑ –û–¢–ü–†–ê–í–ò–¢–¨ –°–ö–†–ò–ù–®–û–¢–´", callback_data="send_screenshots")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.edit_message_text(
            task_text,
            reply_markup=reply_markup
        )
        USER_STATES[user.id]["step"] = 2

    elif query.data == "send_screenshots":
        instruction_text = "üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–∑ TikTok/Likee\n\n"
        instruction_text += "‚ö†Ô∏è –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n"
        instruction_text += "‚Ä¢ –ú–∏–Ω–∏–º—É–º 30 —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤\n"
        instruction_text += "‚Ä¢ –ù–∞ –∫–∞–∂–¥–æ–º —Å–∫—Ä–∏–Ω—à–æ—Ç–µ –≤–∏–¥–µ–Ω –≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\n"
        instruction_text += "‚Ä¢ –í–∏–¥–Ω–æ –ª–∞–π–∫ –ø–æ–¥ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º\n\n"
        instruction_text += "üìé –ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ –æ–¥–Ω–æ–º—É –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ä–∞–∑—É"

        await query.edit_message_text(instruction_text)
        USER_STATES[user.id]["step"] = 3

    elif query.data == "next_task":
        # –í—Ç–æ—Ä–æ–µ –∑–∞–¥–∞–Ω–∏–µ - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ
        task_text = "üéØ –ó–ê–î–ê–ù–ò–ï 2/3 –í–´–ü–û–õ–ù–ï–ù–û!\n\n"
        task_text += "üîπ –ó–ê–î–ê–ù–ò–ï 3/3:\n"
        task_text += "üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –Ω–∞ —Å–∞–π—Ç–µ –∏ —Å—ã–≥—Ä–∞–π—Ç–µ –ø–∞—Ä—É –∏–≥—Ä\n\n"
        task_text += "üí≥ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç: 1000 —Ä—É–±–ª–µ–π\n"
        task_text += "–ü–æ—Å–ª–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:\n"
        task_text += "1. –°–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞\n"
        task_text += "2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å—é–¥–∞\n"
        task_text += "3. –ü–æ–ª—É—á–∏—Ç–µ NFT –º–≥–Ω–æ–≤–µ–Ω–Ω–æ!"

        keyboard = [
            [InlineKeyboardButton("üåê –ü–ï–†–ï–ô–¢–ò –ù–ê –°–ê–ô—Ç", url="https://1wilib.life/v3/3159/cards-promo?p=9pry")],
            [InlineKeyboardButton("üì∑ –û–¢–ü–†–ê–í–ò–¢–¨ –°–ö–†–ò–ù–®–û–¢ –ü–û–ü–û–õ–ù–ï–ù–ò–Ø", callback_data="send_deposit_proof")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)

        await query.edit_message_text(task_text, reply_markup=reply_markup)
        USER_STATES[user.id]["step"] = 5

    elif query.data == "send_deposit_proof":
        instruction_text = "üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞\n\n"
        instruction_text += "–ù–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–∏–¥–Ω–æ:\n"
        instruction_text += "‚Ä¢ –°—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\n"
        instruction_text += "‚Ä¢ –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞\n"
        instruction_text += "‚Ä¢ –°—Ç–∞—Ç—É—Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏\n"
        instruction_text += "‚Ä¢ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è"

        await query.edit_message_text(instruction_text)
        USER_STATES[user.id]["step"] = 6


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user

    if user.id not in USER_STATES:
        USER_STATES[user.id] = {"step": 1, "screenshots_count": 0, "completed_tasks": []}

    current_state = USER_STATES[user.id]

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –¥–ª—è –∑–∞–¥–∞–Ω–∏—è 1
    if current_state["step"] == 3 and update.message.photo:
        current_state["screenshots_count"] += 1
        screenshots_left = 30 - current_state["screenshots_count"]

        if screenshots_left > 0:
            await update.message.reply_text(
                f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–∏–Ω—è—Ç! –û—Å—Ç–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å: {screenshots_left}\n\n"
                f"‚úÖ –ü—Ä–∏–Ω—è—Ç–æ: {current_state['screenshots_count']}/30"
            )
        else:
            # –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
            current_state["completed_tasks"].append("tiktok_comments")
            current_state["step"] = 4

            # –í—Ç–æ—Ä–æ–µ –∑–∞–¥–∞–Ω–∏–µ - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ
            task_text = "üéâ –ó–ê–î–ê–ù–ò–ï 1/3 –í–´–ü–û–õ–ù–ï–ù–û!\n\n"
            task_text += "üîπ –ó–ê–î–ê–ù–ò–ï 2/3:\n"
            task_text += "üåê –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ –Ω–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞\n\n"
            task_text += "üìã –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:\n"
            task_text += "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ\n"
            task_text += "2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n"

            keyboard = [
                [InlineKeyboardButton("üåê –ü–ï–†–ï–ô–¢–ò –ö –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò", url="https://1wilib.life/v3/3159/cards-promo?p=9pry")],
                [InlineKeyboardButton("‚úÖ –Ø –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–õ–°–Ø", callback_data="next_task")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            await update.message.reply_text(task_text, reply_markup=reply_markup)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    elif current_state["step"] == 6 and update.message.photo:
        # –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ - –≤—ã–¥–∞—á–∞ NFT
        current_state["completed_tasks"].append("deposit_made")
        current_state["step"] = 7

        success_text = "üéâ –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! –í–°–ï –ó–ê–î–ê–ù–ò–Ø –í–´–ü–û–õ–ù–ï–ù–´!\n\n"
        success_text += "‚úÖ –í–∞—à NFT http://t.me/nft/TopHat-19884 –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤!\n\n"
        success_text += "–ù–∞—à–∏ –æ—Ç–∑—ã–≤—ã\nhttps://t.me/Rosa13823"

        await update.message.reply_text(success_text)

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤–º–µ—Å—Ç–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    elif update.message.text and current_state["step"] in [3, 6]:
        await update.message.reply_text("‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è")

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —à–∞–≥–µ
    elif current_state["step"] not in [3, 6] and (update.message.photo or update.message.text):
        await update.message.reply_text("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Ç–µ–∫—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ")


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_handler))
    application.add_handler(MessageHandler(filters.TEXT | filters.PHOTO, handle_message))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print(f"üìç –¢–æ–∫–µ–Ω: {BOT_TOKEN}")
    print("‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print("üéØ –ë–æ—Ç –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è!")

    application.run_polling()


if __name__ == "__main__":
    main()